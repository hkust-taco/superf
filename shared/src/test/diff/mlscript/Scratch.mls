
:OccursCheck


rec def f x = (x, x)
//│ f: 'a -> ('a, 'a,)
//│  = [Function: f]

rec def f x = f x
//│ f: anything -> nothing
//│  = [Function: f1]


// TODO don't look at simplif TVs

// :d
// :ds
:e
rec def f x = f
//│ ╔══[ERROR] Inferred recursive type: 'f
//│   where
//│     'f :> anything -> 'f
//│ ╙──
//│ f: 'f
//│   where
//│     'f :> anything -> 'f
//│  = [Function: f2]



